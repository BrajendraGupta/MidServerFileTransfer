<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_kpmg3_mid_server.MSFT_FileImport</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>MSFT_FileImport</name>
        <script><![CDATA[var MSFT_FileImport = Class.create();
MSFT_FileImport.prototype = {
	initialize: function(configName, targetSysId) {
		this.configName = configName; // file configuration Name
		this.targetSysId =  targetSysId; // sys_id of record to attach the imported file(s)
		this.mid_server = gs.getProperty('MSFT.MID.SERVER');
		this.snLog = new GSLog('MSFT.DEBUG.STATUS', 'MSFT_FileImport');
		this.snLog.includeTimestamp();
	},
	
	launchProbe:function(){
		
		var jspr = new JavascriptProbe(this.mid_server);
		jspr.setName('MSFT.FileImport');
		jspr.addParameter("instance_name",gs.getProperty("glide.servlet.uri"));
		jspr.addParameter("target_sys_id",this.targetSysId);
		
		
		//add file information
		var dto = this.getAllParams(this.gr);
		for(var v in dto){
			jspr.addParameter(v,dto[v]);
		}
		jspr.create();
	},
	
	getAllParams: function(){
		var gr = new GlideRecord('file_configuration');
		gr.addQuery('name', this.configName);
		gr.query();
		var target_sys_id;
		if(gr.next()){
			
			//find record to attach files
			if(gr.table_name == 'sys_data_source'){
				//attach file to record provided data source field
				target_sys_id = gr.data_source.toString();
			}
			else{
				//attach file to record provided in targetSysId param
				if(this.targetSysId.isValidRecord())
					target_sys_id = this.targetSysId.sys_id.toString();
				else
					this.snLog.logError("Invalid record supplied to attach files");
			}
			
			// prepare json of file name and their values
			var grjson = {};
				for(var v in gr){
					if(v.indexOf('sys') == -1){ // to avoid sending system fields
						grjson[v] = gr[v].toString();
					}
				}
				grjson['target_sys_id'] = target_sys_id;
				this.snLog.logInfo("File Configuration for "+this.configName+": "+new JSON().encode(grjson));
				return grjson;
			}
			else{
				this.snLog.logError("Invalid File Configuration Name: "+configName);
			}
		},
		
		type: 'MSFT_FileImport'
	};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>brajendragupta@kpmg.com</sys_created_by>
        <sys_created_on>2017-09-16 18:34:34</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>dc720d3413194b00e9c059722244b0d1</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>MSFT_FileImport</sys_name>
        <sys_package display_value="Mid Server File Transfer" source="x_kpmg3_mid_server">8591b87813d54b00e9c059722244b0bd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Mid Server File Transfer">8591b87813d54b00e9c059722244b0bd</sys_scope>
        <sys_update_name>sys_script_include_dc720d3413194b00e9c059722244b0d1</sys_update_name>
        <sys_updated_by>brajendragupta@kpmg.com</sys_updated_by>
        <sys_updated_on>2017-09-16 22:20:48</sys_updated_on>
    </sys_script_include>
</record_update>
